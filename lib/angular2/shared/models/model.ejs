/* tslint:disable */
<%- getModelImports(model) %>

export interface <%- modelName %>Interface {
<% for (var property in model.properties) { var meta = model.properties[property]; -%>
  <% if (meta.description) { %>
  /**
   * <%- meta.description %>
   */<% } %>
  <%- property %><%= meta.required ? '' : '?' -%>: <%- getModelType(meta.type) %>;
  <%
  } // for property in model.properties -%>

  <% Object.keys(model.sharedClass.ctor.relations).forEach(relation => {
  %><%- relation %>?: <%- getPropertyType(model, relation) %>;
  <%
  }); // for property in model.relations -%>

}

export class <%- modelName %> implements <%- modelName %>Interface {
  <% for (var property in model.properties) { var meta = model.properties[property]; -%>
  <% if (meta.description) { %>
  /**
   * <%- meta.description %>
   */<% } %>
  <%- property %>: <%- getModelType(meta.type) %>;<%
  } // for property in model.properties -%>
  
  <% Object.keys(model.sharedClass.ctor.relations).forEach(relation => {
  %><%- relation %>: <%- getPropertyType(model, relation) %>;
  <%
  }); // for property in model.relations -%>

  constructor(instance?: <%- modelName %>) {
    Object.assign(this, instance);
  }
}
